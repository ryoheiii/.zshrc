#!/bin/zsh

## 変更後はコンパイル & 設定 (alias -> zns)
# コンパイル: $ zcompile ~/.zshrc
# 設定:       $ source ~/.zshrc

## ショートカットキー
# C-r    履歴から検索
# Esc-h  man呼び出し
# Esc-q  現在入力中の文字列を退避
# C-a    先頭に移動
# C-a    末尾に移動
# C-k    カーソルから末尾まで削除
# C-w    単語単位で削除
# Esc-?  コマンドのパスを表示
# C-l    クリア
# M-up   上のディレクトリ
# M-left 戻る


################
### 基本設定 ###
################

#履歴の保存先
HISTFILE=${HOME}/.zsh_history
# メモリに展開する履歴の数
HISTSIZE=10000
# 保存する履歴の数
SAVEHIST=10000
# 重複するコマンド行は古い方を削除
setopt hist_ignore_all_dups
#直前と同じコマンドをヒストリに追加しない
setopt hist_ignore_dups
#スペースで始まる場合はヒストリに追加しない
setopt hist_ignore_space
# 履歴をインクリメンタルに追加
setopt inc_append_history
# zshプロセス間でヒストリを共有する
setopt share_history
#移動履歴をプッシュ(cd -[Tab]
setopt auto_pushd
#移動履歴をキューではなくスタックで番号付け(最近居た場所が上になる)
setopt pushd_minus
#移動履歴の重複禁止
setopt PUSHD_IGNORE_DUPS
#重複を優先して削除
setopt hist_expire_dups_first
# historyコマンドは履歴に登録しない
setopt hist_no_store
# 余分な空白は詰めて記録
setopt hist_reduce_blanks
#command not foundの時にはインストール方法を提示
if [ -f "/etc/zsh_command_not_found" ]; then
    source /etc/zsh_command_not_found
fi
#Ctrl-dでログアウトしない
#setopt ignore_eof
#zsh組み込みの関数を利用することでARG_MAXを回避する
#zmodload zsh/files


################
### 環境変数 ###
################
## 日本語utf-8
export LANG=ja_JP.UTF-8

## ライブラリパス
export LD_LIBRARY_PATH=${HOME}/local/lib:${LD_LIBRARY_PATH}

## CUDA and cuDNN paths
export CUDA_HOME=/usr/local/cuda-8.0
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${CUDA_HOME}/lib64
export PATH=$PATH:${CUDA_HOME}/bin

## Programming contest
# online-judge-tools: https://github.com/online-judge-tools/oj
export PATH=$PATH:$HOME/.local/bin

## color
export TERM=xterm-256color

## cpputest: brewでインストールしたものでなく、git cloneしたものを使用
export CPPUTEST_HOME=~/tools/cpputest

## go言語
export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/workspace/goprojects

## Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

### Environmentally Dependent (Environmental variable)
case ${OSTYPE} in
    darwin*) ### Mac
        fpath=(/usr/local/share/zsh-completions $fpath)
        export PATH="/usr/local/bin:$PATH"
        export HOMEBREW_CASK_OPTS="--appdir=/Applications"
        ;;
    linux*)  ### Linux
        ### WSL Linux
        ## X Window Server: https://ja.osdn.net/projects/sfnet_xming/
        # for WSL1
        # export DISPLAY=localhost:0.0

        # for WSL2 (by windwos's ipconfig)
        export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0.0

        ## Windoes Softs: https://qiita.com/python_walker/items/41894c952ee06b018994
        # path
        export PATH=$PATH:/mnt/c/Program\ Files\ \(x86\)/Microsoft\ Office/root/Office16
        export PATH=$PATH:/mnt/c/Program\ Files\ \(x86\)/Adobe/Acrobat\ 11.0/Acrobat
        export PATH=$PATH:/mnt/c/Program\ Files/Mozilla\ Firefox/

        ## japanese input on GUI: https://ahiru8usagi.hatenablog.com/entry/WSL_GUIApps_Japanese
        export GTK_IM_MODULE=fcitx
        export QT_IM_MODULE=fcitx
        export XMODIFIERS=@im=fcitx
        export DefaultIMModule=fcitx
        ;;
esac

### 非端末プロセスなら終了 ###
[ $#PROMPT -eq 0 -o $#TERM -eq 0 ] && return


#################
### プロンプト ##
#################

#黒赤緑黄青紫水白
#local BLACK=$'%{\e[1;30m%}'
#local RED=$'%{\e[1;31m%}'
local GREEN=$'%{\e[1;32m%}'
#local YELLOW=$'%{\e[1;33m%}'
local BLUE=$'%{\e[1;34m%}'
#local PURPLE=$'%{\e[1;35m%}'
#local LIGHTBLUE=$'%{\e[1;36m%}'
#local WHITE=$'%{\e[1;37m%}'
local DEFAULT=$'%{\e[1;m%}'
    #%n     ユーザー名
    #%M     コンピュータ名
    #%c     カレントディレクトリ
#通常
PROMPT=$DEFAULT"%n@%M:"$BLUE"%c"$DEFAULT"$ "
#複数行
PROMPT2="%_$ "
#確認
SPROMPT="%r is correct? [n,y,a,e]: "
#右プロンプト
    #%*     時間
RPROMPT=$DEFAULT"["$GREEN"%*"$DEFAULT"]"
#複数行右プロンプト
#RPROMPT2
#タイトル
case "${TERM}" in
kterm*|xterm*)
    precmd() {
        echo -ne "\033]0;`basename ${PWD}`[${PWD}]\007"
    }
    ;;
esac
#補完候補にもlsと同じ色付き表示

case ${OSTYPE} in
  darwin*) # ここに Mac 向けの設定
    ;;
  linux*)  # ここに Linux 向けの設定
    eval `dircolors`
    zstyle ':completion:*:default' list-colors ${LS_COLORS}
    #kill の候補にも色付き表示
    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([%0-9]#)*=0=01;3\
1'
    ;;
esac


##################
### シェル変数 ###
##################

#補完関数用フォルダ
if [ -d "$HOME/.compfunc" ]; then
    fpath=(${HOME}/.compfunc ${fpath})
fi
#「/」も単語区切りとみなす。
WORDCHARS=${WORDCHARS:s,/,,}


############
### 関数 ###
############
# 上方向へcdする
function up() {
    to=$(perl -le '$p=$ENV{PWD}."/";$d="/".$ARGV[0]."/";$r=rindex($p,$d);$r>=0 && print substr($p, 0, $r+length($d))' $1)
    if [ "$to" = "" ]; then
        echo "no such file or directory: $1" 1>&2
        return 1
    fi
    cd $to
}

# 上へ移動する
function cdup() {
    cd ..
    zle reset-prompt
}

## 戻る
## ↑を少し変えただけ
function cdback() {
    popd
    zle reset-prompt
}

# nautilusでフォルダ開く
function naop() {
    if [ "$#" = "0" ]; then
        nautilus .
    else
        for d in $@
        do
            echo "nautilus $d"
            nautilus $d
        done
    fi
}


###########
## alias ##
###########
alias zns="zcompile ~/.zshrc && source ~/.zshrc"

## git
alias gts="git status"
alias gtd="git diff"
alias gta="git add"
alias gtc="git commit"
alias gtm="git merge"
alias gtp="git push"
alias gtl="git log"
alias gtco="git checkout"

## emacs
alias ekill='emacsclient -e "(kill-emacs)"'
alias emacs='emacs -nw'

## nkf
# ファイルを指定の文字コードで上書き
alias nkfutf8="nkf -w --overwrite "
alias nkfsjis="nkf -s --overwrite "

## cp関連
alias cpmake="cp ~/Dropbox/data/template/make/C_and_C++/Makefile ."

## g++関連
alias g="g++"
alias a="./a.out"
alias g++11="g++ -std=c++11"

## Programming Contest
alias gna="g++ main.cpp && ./a.out" # g++ and a.out
alias gojt="g++ main.cpp && oj t"    # g++ and oj t

## PDFviewer: 現在主に使っているPDFviewrを設定
alias pdfviewer="zathura"
alias pdfediter="pdfshuffler"

## htags
alias htags-html="htags -saF"

## gtags
#alias gtags-table="gtags --gtagslabel=plugin-example"
# gtags のみ（オプションなし）で動く場合あり
alias gtags-table="gtags --gtagslabel=exuberant-ctags"
alias gtags-clear="rm -v GPATH GRTAGS GTAGS"

## mysql
alias mysql_login_ryohei="mysql -u ryohei -p"
alias mysql_login_root="mysql -u root -p"
alias mysql_login_brs="mysql -u brs -p"
alias mysql-config="sudo emacs /etc/mysql/my.conf"
alias mysql-restart="sudo service mysql restart"

## tomcat関連のエイリアス
alias tomcatStart="sudo service tomcat7 start"
alias tomcatStop="sudo service tomcat7 stop"

## javaバージョン切り替えのためのエイリアス
alias javaVerCh="sudo update-alternatives --config java"
alias javacVerCh="sudo update-alternatives --config javac"

## apt系のエイリアス
alias aptupd="sudo apt update"
alias aptupg="sudo apt upgrade"
alias aptrem="sudo apt autoremove"
alias aptcle="sudo apt autoclean"
alias aptins="sudo apt install"

## reboot, poweroff関連
alias poweroff="sudo poweroff"
alias reboot="sudo reboot"

## 移動履歴
# cd -[tab] で，移動履歴を参照し，再利用できる．
setopt auto_pushd
setopt pushd_ignore_dups

## グローバルエイリアス
# ex. grep "hogehoge" ./* W -l
#   = grep "hogehoge" ./* | wc -l
alias -g G='| grep'
alias -g L='| less'
alias -g H='| head'
alias -g T='| tail'
alias -g S='| sort'
alias -g W='| wc'
alias -g X='| xargs'

#ls
alias l='ls -CF'
case ${OSTYPE} in
  darwin*) # ここに Mac 向けの設定
    ;;
  linux*)  # ここに Linux 向けの設定
    alias ls="ls -FX --color=auto"  #ディレクトリには/, 色つき
  ;;
esac
alias la="ls -a"                #隠しファイルも
alias ll="ls -lh"               #詳細付き, ファイルサイズに接頭語
alias lla="ls -lha"                 #全部詳細
#alias lls='ls -l --sort=extension --color=tty'

#mv
alias mv='mv -i'
#cp
alias cp="cp -i"    #上書きを確認
#rm
if type trash-put > /dev/null ; then
    alias rm="trash-put"
fi

#alias rm='rm -i'
alias rm='rm -v'
alias rmtmp='rm -v *~ #*#'
alias rmgtags='rm -v GPATH GRTAGS GTAGS'

#ln
alias ln="ln -i -v"

#拡張子で自動化
# alias -s c=gedit
# alias -s C=gedit
# alias -s cpp=gedit
# alias -s h=gedit
alias -s c=emacs
alias -s C=emacs
alias -s cpp=emacs
alias -s h=emacs
#alias -s html=google-chrome
alias -s html=firefox
# alias -s java=gedit
alias -s java=emacs
#alias -s pdf=google-chrome
alias -s pdf=firefox
# alias -s txt=gedit
alias -s txt=emacs
#alias -s xhtml=google-chrome
alias -s xhtml=firefox
# alias -s xml=gedit
alias -s xml=emacs
alias -s zip=zipinfo
#sudo用gedit
#stdoutをクリップボードへ
alias -g toclip="|xsel -bi"
#stdout+stderrをクリップボードへ
alias -g toclipall=" 2>&1|xsel -bi"
#stdoutをクリップボードとstdoutへ
alias -g andclip="|(cat 1>&2|xsel -bi)2>&1"
#stdout+stderrをクリップボードとstdoutへ
alias -g andclipall=" 2>&1|(cat 1>&2|xsel -bi)2>&1"

#打ち間違い対策
alias s="ls"
alias l="ls"
alias ks="ls"
alias lsa="la"
alias cd..="cd .."
alias emasc="emacs"
alias em="emacs"
##sl
#alias -g sl="echo you are an idiot!"
#alias -g LS="ECHO YOU ARE AN IDIOT!"
alias -g sl="ls"
alias -g LS="ls"

### Environmentally Dependent (alias)
case ${OSTYPE} in
    darwin*) ### Mac
        alias e="open -a emacs"
        ;;
    linux*)  ### Linux
        ### WSL Linux
        alias ppt='POWERPNT.EXE'
        alias exl='EXCEL.EXE'
        alias word='WINWORD.EXE'
        alias adobe='AcroRd32.exe'
        alias fx='firefox.exe'
        ;;
esac

####################
### キーバインド ###
####################
# HOME
bindkey '^[OH' beginning-of-line
bindkey '^[OF' end-of-line
# Delete
bindkey '^[[3~' delete-char

# C-矢印で単語移動
bindkey '^[[1;5C' forward-word
bindkey '^[[1;5D' backward-word

#M-↑でcdup
zle -N cdup
bindkey '^[[1;3A' cdup
#M-←でpopd
zle -N cdback
bindkey '^[[1;3D' cdback
#M-@
bindkey -s '^[`' '`^A `^A'
bindkey -s "^['" "'^A '^A"


##################
### 補完ルール ###
##################

#コマンドラインオプションも補完
autoload -U compinit
compinit
#補完関数をできるだけ過剰に
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
zstyle ':completion:*:*:*:*:processes' command "ps -u `whoami` -o pid,user,comm -w -w"
zstyle ':completion:*' group-name ''
zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories
#use /etc/hosts and known_hosts for hostname completion
[ -r ~/.ssh/known_hosts ] && _ssh_hosts=(${${${${(f)"$(<$HOME/.ssh/known_hosts)"}:#[\|]*}%%\ *}%%,*}) || _ssh_hosts=()
[ -r /etc/hosts ] && : ${(A)_etc_hosts:=${(s: :)${(ps:\t:)${${(f)~~"$(</etc/hosts)"}%%\#*}##[:blank:]#[^[:blank:]]#}}} || _etc_hosts=()
hosts=(
    "$_ssh_hosts[@]"
    "$_etc_hosts[@]"
    `hostname`
    localhost
)
zstyle ':completion:*:hosts' hosts $hosts
#補完の時に大文字小文字を区別しない(但し、大文字を打った場合は小文字に変換しない)
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
#矢印キー補完選択
zstyle ':completion:*:default' menu select
#先方予測・学習機能
#autoload predict-on
#predict-on
#自動cd(cdなしでおｋ
setopt auto_cd
#コマンド修正提示
#setopt correct         #通常
setopt correct_all  #ファイル名まで考慮
#補完候補が複数ある時に、一覧表示する
setopt auto_list
#タブキー連打で補完候補を順に表示
setopt auto_menu
# 補完候補が複数ある時、一覧表示 (auto_list) せず、すぐに最初の候補を補完する
setopt menu_complete
#補完候補一覧でファイルの種別を識別マーク表示(ls -F の記号)
setopt list_types
#'='以降でも補完できるようにする( --prefix=/usr 等の場合)
setopt magic_equal_subst
#補完される前にオリジナルのコマンドまで展開してチェックする
setopt complete_aliases
#カッコの対応などを自動的に補完
setopt auto_param_keys
#末尾の/を消去しない
setopt noautoremoveslash
#出力の文字列末尾に改行コードが無い場合でも表示
unsetopt promptcr


############
## その他 ##
############
### Environmentally Dependent (others)
case ${OSTYPE} in
    darwin*) ### Mac
        ;;
    linux*)  ### Linux
        ### WSL Linux
        umask 022
        ;;
esac
